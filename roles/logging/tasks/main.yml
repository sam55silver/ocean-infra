---
- name: Create Grafana user
  become: true
  user:
    name: grafana
    create_home: false
  tags:
    - grafana

- name: Create Grafana Data Directory
  become: true
  file:
    path: /home/ssilver/data/grafana
    state: directory
    owner: grafana
    group: grafana
  tags:
    - grafana

- name: Get Grafana UID
  shell: id -u grafana
  register: grafana_uid
  tags:
    - grafana

- name: Get Grafana GID
  shell: id -g grafana
  register: grafana_gid
  tags:
    - grafana

- name: Create Grafana container
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana:10.3.1
    ports: 3000:3000
    user: "{{ grafana_uid.stdout }}:{{ grafana_gid.stdout }}"
    volumes:
      - /home/ssilver/data/grafana:/var/lib/grafana
    labels:
      traefik.http.routers.grafana.tls: "true"
      traefik.http.routers.grafana.rule: "Host(`grafana.samsilver.ca`)"
    restart_policy: "always"
  tags:
    - grafana

- name: Copy loki Config over
  copy:
    src: loki-config.yml
    dest: /home/ssilver/configs/loki/

- name: Create Loki container
  community.docker.docker_container:
    name: loki
    image: grafana/loki:2.9.4
    ports: 3100:3100
    volumes:
      - /home/ssilver/configs/loki/loki-config.yml:/etc/loki/local-config.yaml
    labels:
      traefik.enable: "false"
    restart_policy: "always"

- name: Copy Promtail Config over
  copy:
    src: promtail-config.yml
    dest: /home/ssilver/configs/promtail/
  tags:
    - promtail

- name: Create Promtail container
  community.docker.docker_container:
    name: promtail
    image: grafana/promtail:2.9.4
    volumes:
      - /home/ssilver/configs/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    labels:
      traefik.enable: "false"
    restart_policy: "always"
  tags:
    - promtail

- name: Create Prometheus container
  community.docker.docker_container:
    name: prometheus
    image: prom/prometheus:v2.49.1
    ports: 9090:9090
    labels:
      traefik.enable: "false"
    restart_policy: "always"
    etc_hosts:
      host.docker.internal: host-gateway

- name: Create CAdvisor container
  community.docker.docker_container:
    name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    ports: 8080:8080
    labels:
      traefik.enable: "false"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart_policy: "always"
    etc_hosts:
      host.docker.internal: host-gateway

- name: Create and connect logging network
  community.docker.docker_network:
    name: logging
    connected:
      - grafana
      - loki
      - promtail
      - prometheus
      - cadvisor

